{
  "name": "mpy-workbench",
  "icon": "media/logo.png",
  "displayName": "MPY Workbench",
  "description": "Browse and manage MicroPython files on ESP32 and similar boards via mpremote.",
  "version": "0.2.5",
  "publisher": "DanielBucam",
  "engines": {
    "vscode": "^1.84.0"
  },
  "extensionDependencies": [],
  "extensionPack": [],
  "extensionKind": ["workspace"],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "extensionPack": [],
  "categories": [
    "Programming Languages",
    "Debuggers"
  ],
  "activationEvents": [
    "onLanguage:python"
  ],
  "main": "./dist/extension.js",
  "scripts": {
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "package": "vsce package"
  },
  "devDependencies": {
    "@types/node": "^20.11.30",
    "@types/vscode": "^1.84.0",
    "typescript": "^5.4.0",
    "vsce": "^2.15.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/DanielBustillos/mpy-workbench"
  },
  "contributes": {
    "viewsWelcome": [
      {
        "view": "mpyWorkbenchFsView",
        "contents": "No serial port selected.\n\n[Select Serial Port](command:mpyWorkbench.pickPort)",
        "when": "!mpyWorkbench.hasPort"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "mpyWorkbenchFs",
          "title": "MPY Workbench",
          "icon": "./media/activitybar.svg"
        }
      ]
    },
    "customEditors": [],
    "css": [
      "./media/esp32fs.css"
    ],
    "views": {
      "mpyWorkbenchFs": [
        {
          "id": "mpyWorkbenchFsView",
          "name": "Files",
          "icon": "$(files)"
        },
        {
          "id": "mpyWorkbenchActionsView",
          "name": "Board Actions",
          "icon": "$(tools)"
        },
        {
          "id": "mpyWorkbenchSyncView",
          "name": "Sync Files",
          "icon": "$(sync)"
        }
      ]
    },
    "commands": [
      {
        "command": "mpyWorkbench.refresh",
        "title": "MPY Workbench: Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "mpyWorkbench.openFile",
        "title": "MPY Workbench: Open File from board"
      },
      {
        "command": "mpyWorkbench.uploadActiveFile",
        "title": "MPY Workbench: Upload Active File"
      },
      {
        "command": "mpyWorkbench.newFileBoardAndLocal",
        "title": "MPY Workbench: New File (Board + Local)",
        "icon": "$(new-file)"
      },
      {
        "command": "mpyWorkbench.newFileInTree",
        "title": "MPY Workbench: New File Here",
        "icon": "$(new-file)"
      },
      {
        "command": "mpyWorkbench.newFolderInTree",
        "title": "MPY Workbench: New Folder Here",
        "icon": "$(new-folder)"
      },
      {
        "command": "mpyWorkbench.renameNode",
        "title": "MPY Workbench: Rename File/Folder",
        "icon": "$(edit)"
      },
      {
        "command": "mpyWorkbench.pickPort",
        "title": "MPY Workbench: Select Serial Port",
        "icon": "$(plug)"
      },
      {
        "command": "mpyWorkbench.refreshPorts",
        "title": "MPY Workbench: Refresh Ports",
        "icon": "$(refresh)"
      },
      {
        "command": "mpyWorkbench.setPort",
        "title": "MPY Workbench: Use This Port"
      },
      {
        "command": "mpyWorkbench.mkdir",
        "title": "MPY Workbench: New Folder"
      },
      {
        "command": "mpyWorkbench.openSerial",
        "title": "MPY Workbench: Open Serial Monitor",
        "icon": "$(terminal)"
      },
      {
        "command": "mpyWorkbench.openRepl",
        "title": "MPY Workbench: Open REPL",
        "icon": "$(terminal)"
      },
      {
        "command": "mpyWorkbench.runActiveFile",
        "title": "MPY Workbench: Run Active File",
        "icon": "$(play)"
      },
      {
        "command": "mpyWorkbench.stop",
        "title": "MPY Workbench: Stop (Ctrl-C/A/D)",
        "icon": "$(debug-stop)"
      },
      {
        "command": "mpyWorkbench.softReset",
        "title": "MPY Workbench: Soft Reset (Ctrl-D)",
        "icon": "$(debug-restart)"
      },
      {
        "command": "mpyWorkbench.syncBaseline",
        "title": "MPY Workbench: Sync all files (Local → Board)",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "mpyWorkbench.checkDiffs",
        "title": "MPY Workbench: Check files differences",
        "icon": "$(diff)"
      },
      {
        "command": "mpyWorkbench.syncDiffsLocalToBoard",
        "title": "MPY Workbench: Sync changed Files Local → Board",
        "icon": "$(export)"
      },
      {
        "command": "mpyWorkbench.syncDiffsBoardToLocal",
        "title": "MPY Workbench: Sync changed Files Board → Local",
        "icon": "$(import)"
      },
      {
        "command": "mpyWorkbench.syncBaselineFromBoard",
        "title": "MPY Workbench: Sync all files (Board → Local)",
        "icon": "$(cloud-download)"
      },
      {
        "command": "mpyWorkbench.serialSendCtrlC",
        "title": "MPY Workbench: Interrupt (Ctrl-C, Ctrl-B)",
        "icon": "$(debug-pause)"
      },
      {
        "command": "mpyWorkbench.openFileFromLocal",
        "title": "MPY Workbench: Open File from Local (default)",
        "icon": "$(file-directory)"
      },
      {
        "command": "mpyWorkbench.syncFileLocalToBoard",
        "title": "MPY Workbench: Sync File Local → Board",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "mpyWorkbench.syncFileBoardToLocal",
        "title": "MPY Workbench: Sync File Board → Local",
        "icon": "$(cloud-download)"
      },
      {
        "command": "mpyWorkbench.delete",
        "title": "MPY Workbench: Delete from Board"
      },
      {
        "command": "mpyWorkbench.deleteBoardAndLocal",
        "title": "MPY Workbench: Delete from Board and Local",
        "icon": {
          "light": "./media/trash-red.svg",
          "dark": "./media/trash-red.svg"
        }
      },
      {
        "command": "mpyWorkbench.runFromView",
        "title": "MPY Workbench: Run Command (View Wrapper)"
      },
      {
        "command": "mpyWorkbench.syncBaselineFromView",
        "title": "MPY Workbench: Sync all files (Local → Board) (View)",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "mpyWorkbench.syncBaselineFromBoardFromView",
        "title": "MPY Workbench: Sync all files (Board → Local) (View)",
        "icon": "$(cloud-download)"
      },
      {
        "command": "mpyWorkbench.checkDiffsFromView",
        "title": "MPY Workbench: Check files differences (View)",
        "icon": "$(diff)"
      },
      {
        "command": "mpyWorkbench.syncDiffsLocalToBoardFromView",
        "title": "MPY Workbench: Sync changed Files Local → Board (View)",
        "icon": "$(cloud-upload)"
      },
      {
        "command": "mpyWorkbench.syncDiffsBoardToLocalFromView",
        "title": "MPY Workbench: Sync changed Files Board → Local (View)",
        "icon": "$(cloud-download)"
      },
      {
        "command": "mpyWorkbench.runActiveFileFromView",
        "title": "MPY Workbench: Run Active File (View)",
        "icon": "$(play)"
      },
      {
        "command": "mpyWorkbench.openReplFromView",
        "title": "MPY Workbench: Open REPL (View)",
        "icon": "$(terminal)"
      },
      {
        "command": "mpyWorkbench.deleteAllBoard",
        "title": "MPY Workbench: Delete ALL files on Board",
        "icon": {
          "light": "./media/trash-red.svg",
          "dark": "./media/trash-red.svg"
        }
      },
      {
        "command": "mpyWorkbench.deleteAllBoardFromView",
        "title": "MPY Workbench: Delete ALL files on Board (View)",
        "icon": {
          "light": "./media/trash-red.svg",
          "dark": "./media/trash-red.svg"
        }
      },
      {
        "command": "mpyWorkbench.toggleWorkspaceAutoSync",
        "title": "MPY Workbench: Toggle workspace Auto-Sync on Save"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "mpyWorkbench.syncBaselineFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@0"
        },
        {
          "command": "mpyWorkbench.syncBaselineFromBoardFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@1"
        },
        {
          "command": "mpyWorkbench.checkDiffsFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@3"
        },
        {
          "command": "mpyWorkbench.syncDiffsLocalToBoardFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@4"
        },
        {
          "command": "mpyWorkbench.syncDiffsBoardToLocalFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@5"
        },
        {
          "command": "mpyWorkbench.deleteAllBoardFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@9"
        },
        {
          "command": "mpyWorkbench.runActiveFileFromView",
          "when": "view == mpyWorkbenchActionsView",
          "group": "navigation@0"
        },
        {
          "command": "mpyWorkbench.openReplFromView",
          "when": "view == mpyWorkbenchActionsView",
          "group": "navigation@1"
        },
        {
          "command": "mpyWorkbench.serialSendCtrlC",
          "when": "view == mpyWorkbenchActionsView",
          "group": "navigation@2"
        },
        {
          "command": "mpyWorkbench.refresh",
          "when": "view == mpyWorkbenchFsView",
          "group": "navigation@0"
        },
        {
          "command": "mpyWorkbench.pickPort",
          "when": "view == mpyWorkbenchFsView",
          "group": "navigation@1"
        },
        {
          "command": "mpyWorkbench.checkDiffsFromView",
          "when": "view == mpyWorkbenchSyncView",
          "group": "navigation@3"
        }
      ],
      "view/item/context": [
        {
          "command": "mpyWorkbench.renameNode",
          "when": "view == mpyWorkbenchFsView && (viewItem == file || viewItem == dir)",
          "group": "2_edit@1"
        },
        {
          "command": "mpyWorkbench.openFile",
          "when": "view == mpyWorkbenchFsView && viewItem == file",
          "group": "1_open@1"
        },
        {
          "command": "mpyWorkbench.openFileFromLocal",
          "when": "view == mpyWorkbenchFsView && viewItem == file",
          "group": "1_open@2"
        },
        {
          "command": "mpyWorkbench.syncFileLocalToBoard",
          "when": "view == mpyWorkbenchFsView && viewItem == file",
          "group": "2_sync@1"
        },
        {
          "command": "mpyWorkbench.syncFileBoardToLocal",
          "when": "view == mpyWorkbenchFsView && viewItem == file",
          "group": "2_sync@2"
        },
        {
          "command": "mpyWorkbench.newFileInTree",
          "when": "view == mpyWorkbenchFsView && (viewItem == dir || viewItem == file)",
          "group": "0_create@0"
        },
        {
          "command": "mpyWorkbench.newFolderInTree",
          "when": "view == mpyWorkbenchFsView && (viewItem == dir || viewItem == file)",
          "group": "0_create@1"
        },
        {
          "command": "mpyWorkbench.delete",
          "when": "view == mpyWorkbenchFsView && (viewItem == file || viewItem == dir)",
          "group": "3_delete@1"
        },
        {
          "command": "mpyWorkbench.deleteBoardAndLocal",
          "when": "view == mpyWorkbenchFsView && (viewItem == file || viewItem == dir)",
          "group": "3_delete@2"
        },
        {
          "command": "mpyWorkbench.newFileBoardAndLocal",
          "when": "view == mpyWorkbenchFsView && !viewItem",
          "group": "0_create@0"
        },
        {
          "command": "mpyWorkbench.newFileInTree",
          "when": "view == mpyWorkbenchFsView && !viewItem",
          "group": "0_create@1"
        },
        {
          "command": "mpyWorkbench.newFolderInTree",
          "when": "view == mpyWorkbenchFsView && !viewItem",
          "group": "0_create@2"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "MPY Workbench",
      "properties": {
        "mpyWorkbench.autoSyncOnSave": {
          "type": "boolean",
          "default": false,
          "description": "Auto-sync on save: when enabled, saving a local file also uploads it to the board; when disabled, only saves locally. Per-workspace override available in .mpystudio/config.json."
        },
        "mpyWorkbench.connect": {
          "type": "string",
          "default": "auto",
          "description": "Serial device (e.g. auto, /dev/ttyUSB0, COM3)"
        },
        "mpyWorkbench.serialAutoSuspend": {
          "type": "boolean",
          "default": true,
          "description": "Automatically close the REPL terminal before file ops and reopen after."
        },
        "mpyWorkbench.interruptOnConnect": {
          "type": "boolean",
          "default": true,
          "description": "On opening the REPL, send Ctrl-C to interrupt any running program."
        },
        "mpyWorkbench.strictConnect": {
          "type": "boolean",
          "default": true,
          "description": "Before opening REPL, perform a strict handshake (reset + quick check + retry) to ensure prompt like Thonny."
        },
        "mpyWorkbench.preListDelayMs": {
          "type": "number",
          "default": 150,
          "description": "Delay (ms) before listing after interrupt/reset to allow OS/device to settle."
        },
        "mpyWorkbench.rootPath": {
          "type": "string",
          "default": "/",
          "description": "Root path to show on device (e.g. /, /lib)"
        },
        "mpyWorkbench.usePyRawList": {
          "type": "boolean",
          "default": false,
          "description": "List directories using a Python raw REPL script (requires python3 + mpremote)."
        },
        "mpyWorkbench.baudRate": {
          "type": "number",
          "default": 115200,
          "description": "Serial baud rate for UART bridges (ignored on native USB CDC). Try 921600 or 1500000 if your board/adapter supports it."
        },
        "mpyWorkbench.pythonPath": {
          "type": "string",
          "default": "",
          "description": "Override Python interpreter path. Leave empty to use VS Code's configured Python interpreter."
        }
      }
    }
  }
}
